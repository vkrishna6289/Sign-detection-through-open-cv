#this is the python code for live object tracking with opencv 

import cv2

# === Load Haar cascade for face detection ===
cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'
cascade = cv2.CascadeClassifier(cascade_path)

if cascade.empty():
    raise IOError("Failed to load cascade classifier.")

# === Start video capture from default webcam (0) ===
cap = cv2.VideoCapture(0)  # Use 1 or 2 if you have multiple cameras

if not cap.isOpened():
    raise IOError("Cannot open webcam")

print("Press 'q' to quit.")

while True:
    # Read frame-by-frame from the webcam
    ret, frame = cap.read()
    if not ret:
        print("Failed to grab frame.")
        break

    # Convert to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # Draw rectangles around detected faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

    # Show the frame
    cv2.imshow('Live Face Detection', frame)

    # Press 'q' to quit
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
cap.release()
cv2.destroyAllWindows()
