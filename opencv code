#this the code for the program
import cv2
from matplotlib import pyplot as plt

# === Step 1: Load Haar cascade using OpenCV's built-in path ===
cascade_path = cv2.data.haarcascades + 'haarcascade_frontalface_default.xml'
cascade = cv2.CascadeClassifier(cascade_path)

# Check if cascade loaded successfully
if cascade.empty():
    raise IOError("Failed to load cascade classifier. Check the XML file path.")

# === Step 2: Load the input image using full path ===
# Replace the path below with your actual image path
image_path = r'C:\Users\ELCOT\xxxxx\xxxx.jpg'  # <-- Change this to your image path
img = cv2.imread(image_path)

# Check if image was loaded successfully
if img is None:
    raise IOError("Failed to load image. Check the image file path.")

# === Step 3: Convert image to grayscale ===
gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# === Step 4: Detect faces ===
objects = cascade.detectMultiScale(
    gray_img,
    scaleFactor=1.1,
    minNeighbors=5,
    minSize=(30, 30)
)

# === Step 5: Draw rectangles around detected faces ===
for (x, y, w, h) in objects:
    cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 3)

# === Step 6: Convert image to RGB for matplotlib ===
rgb_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# === Step 7: Show result ===
plt.imshow(rgb_img)
plt.axis('off')
plt.title(f'Detected Faces: {len(objects)}')
plt.show()
